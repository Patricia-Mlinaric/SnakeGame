@import url("https://fonts.cdnfonts.com/css/naston");
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Naston", sans-serif;
  font-weight: 600;
  color: #6e7888;
  height: 100vh;
  background-color: #222738;
  display: flex;
  justify-content: center;
  align-items: center;
}

.scores {
  font-size: 2rem;
  display: flex;
  padding: 0px 1rem;
  justify-content: space-between;
}

.btn {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

button {
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  font-family: inherit;
  font-size: 1.2rem;
  background: none;
  padding: 0.7rem 1.4rem;
  letter-spacing: 0.1rem;
  transition: 0.1s ease-in-out all;
  outline: none;
}
button:hover {
  transform: scale(0.95);
  color: rgba(13, 179, 121, 0.87);
}

.grid {
  width: 80vh;
  height: 80vh;
  background-color: #181825;
  border: 1px solid #181825;
  box-shadow: 0 3rem 5rem rgba(13, 179, 121, 0.87);
  margin: 2% auto;
  display: grid;
}

.food {
  width: 100%;
  height: 100%;
  background: url(./icons/lubenica.svg);
  background-size: contain !important;
  filter: drop-shadow(4px 4px 4px rgba(13, 179, 121, 0.87));
}

.snake {
  width: 100%;
  height: 100%;
  background: rgba(13, 200, 121, 0.87);
  box-shadow: 1px 0rem 1rem 2px rgba(13, 179, 121, 0.87);
  transform: scale(0.9);
}

.head-snake {
  transform: scale(1.05);
  background: red;
  box-shadow: 1px 0rem 1rem 2px rgba(255, 16, 0, 0.95);
}

.directional-buttons {
  display: none;
}

@media (max-width: 600px) {
  .grid {
    width: 98vw;
    height: 98vw;
  }
  .scores {
    font-size: 1rem;
    color: #181825;
  }
  button {
    font-size: 1rem;
    background: none;
    padding: 0.5rem 1rem;
  }
  body {
    display: block;
    margin-top: 2rem;
  }
  /* button layout */
  .directional-buttons {
    /* Define the size of the grid */
    /* Other things rely on this! Change at your own peril! */
    width: 14rem;
    height: 14rem;
    /* display the buttons in a grid */
    display: grid;
    /* leave a little gap between columns/rows */
    grid-gap: 0.5rem;
    /* define a 3 x 3 grid with middle column/row larger */
    grid-template-columns: 45fr 60fr 45fr;
    grid-template-rows: 45fr 60fr 45fr;
    /* name the cells in the grid */
    grid-template-areas: "....  up  ....." "left  ..  right" ".... down .....";
    position: absolute;
    left: calc(50vw - 7rem);
    bottom: 4rem;
  }
  /* hides the button text */
  .visually-hidden {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    white-space: nowrap;
  }
  /* base button */
  .direction-button {
    /* the button colours */
    color: #181825;
    /* since there's no text, we can use the color value for the background */
    background: currentcolor;
    /* clears default button styles */
    border: none;
    /* makes sure the triangles are moved relative to the button */
    position: relative;
  }
  /* the overlapping outside triangle 
  * actually, it's just a rotated square
  */
  .direction-button:before {
    /* make the triangle display */
    display: block;
    content: "";
    /* make the triangle able to be moved around relative to the button */
    position: absolute;
    /* approximately makes the diagonal the right size */
    width: 4.25rem;
    height: 4.25rem;
    /* rotate the square (to look like a triangle) */
    transform: rotate(45deg);
    /* use the current color value for the background to match the button */
    background: currentcolor;
  }
  /* the inner direction triangle */
  .direction-button:after {
    /* make the triangle display */
    display: block;
    content: "";
    /* make the triangle able to be moved around relative to the button */
    position: absolute;
    /* same border-based triangle trick as before */
    border: 2rem solid transparent;
    /* using color value for border-color to make it easier to change */
    color: rgb(13, 179, 121);
  }
  /* when the button is hovered */
  .direction-button:hover {
    /* make the button a different color */
    color: #181825;
  }
  /* when the button is pressed */
  .direction-button:active:after {
    /* make the inner triangle a different color! */
    color: rgb(15, 138, 95);
  }
  /* individual button styles */
  .up {
    /* puts the button in the named grid cell */
    grid-area: up;
    /* only curves the outer corners */
    border-radius: 0.5rem 0.5rem 0 0;
  }
  .up:before {
    /* center the overlapping triangle horizontally */
    left: calc(50% - 2.125rem);
    /* position it so it overlaps just right */
    bottom: -2.125rem;
  }
  .up:after {
    /* do the border-based triangle trick */
    border-bottom-color: currentcolor;
    /* center inner triangle horizontally */
    left: calc(50% - 2rem);
    /* position it just right */
    top: -1rem;
  }
  .left {
    /* puts the button in the named grid cell */
    grid-area: left;
    /* only curves the outer corners */
    border-radius: 0.5rem 0 0 0.5rem;
  }
  .left:before {
    /* position it so it overlaps just right */
    right: -2.125rem;
    /* center the overlapping triangle vertically */
    top: calc(50% - 2.125rem);
  }
  .left:after {
    /* do the border-based triangle trick */
    border-right-color: currentcolor;
    /* center inner triangle vertically */
    top: calc(50% - 2rem);
    /* position it just right */
    left: -1rem;
  }
  .right {
    /* puts the button in the named grid cell */
    grid-area: right;
    /* only curves the outer corners */
    border-radius: 0 0.5rem 0.5rem 0;
  }
  .right:before {
    /* position it so it overlaps just right */
    left: -2.125rem;
    /* center the overlapping triangle vertically */
    top: calc(50% - 2.125rem);
  }
  .right:after {
    /* do the border-based triangle trick */
    border-left-color: currentcolor;
    /* center inner triangle vertically */
    top: calc(50% - 2rem);
    /* position it just right */
    right: -1rem;
  }
  .down {
    /* puts the button in the named grid cell */
    grid-area: down;
    /* only curves the outer corners */
    border-radius: 0 0 0.5rem 0.5rem;
  }
  .down:before {
    /* center the overlapping triangle horizontally */
    left: calc(50% - 2.125rem);
    /* position it so it overlaps just right */
    top: -2.125rem;
  }
  .down:after {
    /* do the border-based triangle trick */
    border-top-color: currentcolor;
    /* center inner triangle horizontally */
    left: calc(50% - 2rem);
    /* position it just right */
    bottom: -1rem;
  }
}/*# sourceMappingURL=style.css.map */